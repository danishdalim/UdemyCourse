{
	"id": "c8fbfd9de9b6af10df40d1a45f1a2960",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.7",
	"solcLongVersion": "0.5.7+commit.6da8b019",
	"input": {
		"language": "Solidity",
		"sources": {
			"Transfer.sol": {
				"content": "pragma solidity ^0.5.7;\n\ncontract DuitNow {\n\n        address owner;\n        string receipient;\n        uint balance;\n\n    constructor() payable public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    address payable[] Account;\n\n    mapping(address => uint) Wallet;\n\n    \n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Transfer.sol": {
				"DuitNow": {
					"abi": [
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Transfer.sol\":25:346  contract DuitNow {... */\n  mstore(0x40, 0x80)\n    /* \"Transfer.sol\":169:179  msg.sender */\n  caller\n    /* \"Transfer.sol\":161:166  owner */\n  0x00\n  dup1\n    /* \"Transfer.sol\":161:179  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Transfer.sol\":25:346  contract DuitNow {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Transfer.sol\":25:346  contract DuitNow {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a7230582011c4a312212289f2fdfc2e62e232eaab43eee04310ded7bd641299288fb234960029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060358060516000396000f3fe6080604052600080fdfea165627a7a7230582011c4a312212289f2fdfc2e62e232eaab43eee04310ded7bd641299288fb234960029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x35 DUP1 PUSH1 0x51 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 GT 0xc4 LOG3 SLT 0x21 0x22 DUP10 CALLCODE REVERT 0xfc 0x2e PUSH3 0xE232EA 0xab NUMBER 0xee 0xe0 NUMBER LT 0xde 0xd7 0xbd PUSH5 0x1299288FB2 CALLVALUE SWAP7 STOP 0x29 ",
							"sourceMap": "25:321:0:-;;;169:10;161:5;;:18;;;;;;;;;;;;;;;;;;25:321;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fdfea165627a7a7230582011c4a312212289f2fdfc2e62e232eaab43eee04310ded7bd641299288fb234960029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 GT 0xc4 LOG3 SLT 0x21 0x22 DUP10 CALLCODE REVERT 0xfc 0x2e PUSH3 0xE232EA 0xab NUMBER 0xee 0xe0 NUMBER LT 0xde 0xd7 0xbd PUSH5 0x1299288FB2 CALLVALUE SWAP7 STOP 0x29 ",
							"sourceMap": "25:321:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "20308",
								"totalCost": "30908"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 346,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 346,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 346,
									"name": "MSTORE"
								},
								{
									"begin": 169,
									"end": 179,
									"name": "CALLER"
								},
								{
									"begin": 161,
									"end": 166,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 161,
									"end": 166,
									"name": "DUP1"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "EXP"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "DUP2"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "SLOAD"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "DUP2"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "MUL"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "NOT"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "AND"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "SWAP1"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "DUP4"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "AND"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "MUL"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "OR"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "SWAP1"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "SSTORE"
								},
								{
									"begin": 161,
									"end": 179,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 346,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 346,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 346,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 346,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 346,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 346,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 346,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582011c4a312212289f2fdfc2e62e232eaab43eee04310ded7bd641299288fb234960029",
									".code": [
										{
											"begin": 25,
											"end": 346,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 346,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 346,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 346,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Transfer.sol\":\"DuitNow\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Transfer.sol\":{\"keccak256\":\"0x01402ca1daf8f971b42bbbc731d03c66843bd482a4ae666717e4f5fa93cd29f1\",\"urls\":[\"bzzr://ce24e64a3d5692e2c332afb41d9a4dadda2a73bbc728171f12e9a74d6fc29aec\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Transfer.sol": {
				"ast": {
					"absolutePath": "Transfer.sol",
					"exportedSymbols": {
						"DuitNow": [
							35
						]
					},
					"id": 36,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 35,
							"linearizedBaseContracts": [
								35
							],
							"name": "DuitNow",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "53:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "53:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"name": "receipient",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "76:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 4,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "76:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"name": "balance",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "103:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "103:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "151:35:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "161:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "169:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "169:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "161:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "161:18:0"
											}
										]
									},
									"documentation": null,
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "133:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "151:0:0"
									},
									"scope": 35,
									"src": "122:64:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "211:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 19,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "229:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "229:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 21,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "243:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "229:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															53,
															54
														],
														"referencedDeclaration": 53,
														"src": "221:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "221:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "221:28:0"
											},
											{
												"id": 25,
												"nodeType": "PlaceholderStatement",
												"src": "259:1:0"
											}
										]
									},
									"documentation": null,
									"id": 27,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:0:0"
									},
									"src": "192:75:0",
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 30,
									"name": "Account",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "273:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
										"typeString": "address payable[]"
									},
									"typeName": {
										"baseType": {
											"id": 28,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "273:15:0",
											"stateMutability": "payable",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											}
										},
										"id": 29,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "273:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
											"typeString": "address payable[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 34,
									"name": "Wallet",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "305:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 33,
										"keyType": {
											"id": 31,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "313:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "305:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 32,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "324:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"scope": 36,
							"src": "25:321:0"
						}
					],
					"src": "0:346:0"
				},
				"id": 0
			}
		}
	}
}