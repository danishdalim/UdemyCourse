{
	"id": "f85db42dd38a19e440977c3f6d78e877",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.7",
	"solcLongVersion": "0.5.7+commit.6da8b019",
	"input": {
		"language": "Solidity",
		"sources": {
			"will.sol": {
				"content": "pragma solidity ^0.5.7;\n\ncontract Will {\n\n    address owner;\n    uint fortune;\n    bool deceased;\n\n    constructor() payable public {\n        owner = msg.sender;\n        fortune = msg.value;\n        deceased = false;\n    \n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    modifier deceasedp() {\n        require(deceased == true);\n        _;\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"will.sol": {
				"Will": {
					"abi": [
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"will.sol\":25:393  contract Will {... */\n  mstore(0x40, 0x80)\n    /* \"will.sol\":150:160  msg.sender */\n  caller\n    /* \"will.sol\":142:147  owner */\n  0x00\n  dup1\n    /* \"will.sol\":142:160  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"will.sol\":180:189  msg.value */\n  callvalue\n    /* \"will.sol\":170:177  fortune */\n  0x01\n    /* \"will.sol\":170:189  fortune = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"will.sol\":210:215  false */\n  0x00\n    /* \"will.sol\":199:207  deceased */\n  0x02\n  0x00\n    /* \"will.sol\":199:215  deceased = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"will.sol\":25:393  contract Will {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"will.sol\":25:393  contract Will {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058206c245bb5c6ce3bda44475db57027d674b43207d3d8776cd8b64743d94cfeca760029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506000600260006101000a81548160ff02191690831515021790555060358060736000396000f3fe6080604052600080fdfea165627a7a723058206c245bb5c6ce3bda44475db57027d674b43207d3d8776cd8b64743d94cfeca760029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x35 DUP1 PUSH1 0x73 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH13 0x245BB5C6CE3BDA44475DB57027 0xd6 PUSH21 0xB43207D3D8776CD8B64743D94CFECA760029000000 ",
							"sourceMap": "25:368:0:-;;;150:10;142:5;;:18;;;;;;;;;;;;;;;;;;180:9;170:7;:19;;;;210:5;199:8;;:16;;;;;;;;;;;;;;;;;;25:368;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fdfea165627a7a723058206c245bb5c6ce3bda44475db57027d674b43207d3d8776cd8b64743d94cfeca760029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH13 0x245BB5C6CE3BDA44475DB57027 0xd6 PUSH21 0xB43207D3D8776CD8B64743D94CFECA760029000000 ",
							"sourceMap": "25:368:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "60588",
								"totalCost": "71188"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 393,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 393,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 393,
									"name": "MSTORE"
								},
								{
									"begin": 150,
									"end": 160,
									"name": "CALLER"
								},
								{
									"begin": 142,
									"end": 147,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 142,
									"end": 147,
									"name": "DUP1"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "EXP"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "DUP2"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "SLOAD"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "DUP2"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "MUL"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "NOT"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "AND"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "SWAP1"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "DUP4"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "AND"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "MUL"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "OR"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "SWAP1"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "SSTORE"
								},
								{
									"begin": 142,
									"end": 160,
									"name": "POP"
								},
								{
									"begin": 180,
									"end": 189,
									"name": "CALLVALUE"
								},
								{
									"begin": 170,
									"end": 177,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 170,
									"end": 189,
									"name": "DUP2"
								},
								{
									"begin": 170,
									"end": 189,
									"name": "SWAP1"
								},
								{
									"begin": 170,
									"end": 189,
									"name": "SSTORE"
								},
								{
									"begin": 170,
									"end": 189,
									"name": "POP"
								},
								{
									"begin": 210,
									"end": 215,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 199,
									"end": 207,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 199,
									"end": 207,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "EXP"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "DUP2"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "SLOAD"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "DUP2"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "MUL"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "NOT"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "AND"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "SWAP1"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "DUP4"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "ISZERO"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "ISZERO"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "MUL"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "OR"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "SWAP1"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "SSTORE"
								},
								{
									"begin": 199,
									"end": 215,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 393,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 393,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 393,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 393,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 393,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 393,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 393,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058206c245bb5c6ce3bda44475db57027d674b43207d3d8776cd8b64743d94cfeca760029",
									".code": [
										{
											"begin": 25,
											"end": 393,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 393,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 393,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 393,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"will.sol\":\"Will\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"will.sol\":{\"keccak256\":\"0x8af7a1d0e3ba6910d9bd5e4558c8bb769804e503641a641c883561f815c90c79\",\"urls\":[\"bzzr://fad3330d4849638ed889e08286e01d8e2fb3e4ee5f97d927e6016d0848802e21\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"will.sol": {
				"ast": {
					"absolutePath": "will.sol",
					"exportedSymbols": {
						"Will": [
							47
						]
					},
					"id": 48,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 47,
							"linearizedBaseContracts": [
								47
							],
							"name": "Will",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 47,
									"src": "46:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "46:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"name": "fortune",
									"nodeType": "VariableDeclaration",
									"scope": 47,
									"src": "65:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "65:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"name": "deceased",
									"nodeType": "VariableDeclaration",
									"scope": 47,
									"src": "83:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 6,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "83:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "132:95:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "142:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "150:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "150:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "142:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "142:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 15,
														"name": "fortune",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "170:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 16,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "180:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "180:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "170:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "170:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 20,
														"name": "deceased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "199:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "210:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "199:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "199:16:0"
											}
										]
									},
									"documentation": null,
									"id": 25,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "132:0:0"
									},
									"scope": 47,
									"src": "103:124:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "254:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 28,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "272:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "272:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 30,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "286:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "272:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															65,
															66
														],
														"referencedDeclaration": 65,
														"src": "264:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "264:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "264:28:0"
											},
											{
												"id": 34,
												"nodeType": "PlaceholderStatement",
												"src": "302:1:0"
											}
										]
									},
									"documentation": null,
									"id": 36,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:0"
									},
									"src": "233:77:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "337:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 39,
																"name": "deceased",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "355:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "367:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "355:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															65,
															66
														],
														"referencedDeclaration": 65,
														"src": "347:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "347:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "347:25:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "382:1:0"
											}
										]
									},
									"documentation": null,
									"id": 46,
									"name": "deceasedp",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "334:2:0"
									},
									"src": "316:74:0",
									"visibility": "internal"
								}
							],
							"scope": 48,
							"src": "25:368:0"
						}
					],
					"src": "0:393:0"
				},
				"id": 0
			}
		}
	}
}